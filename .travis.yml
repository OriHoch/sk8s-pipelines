language: bash
sudo: required
env:
  matrix:
  - BUILD_PATH=/pwd CLOUDSDK_CORE_PROJECT=uumpa123 PROJECT_NAME=sk8s-pipelines DEPLOY_BRANCH=master DEPLOY_ENVIRONMENT=_
  - BUILD_PATH=/pwd/google-storage-sync CLOUDSDK_CORE_PROJECT=uumpa-public PROJECT_NAME=sk8s-google-storage-sync DEPLOY_BRANCH=master DEPLOY_ENVIRONMENT=_
services:
- docker
script:
- |
  if [ "${DEPLOY_ENVIRONMENT}" != "" ] && [ "${TRAVIS_PULL_REQUEST}" == "false" ] &&\
     ([ "${TRAVIS_BRANCH}" == "${DEPLOY_BRANCH}" ] || ([ "${DEPLOY_TAGS}" == "true" ] && [ "${TRAVIS_TAG}" != "" ])) &&\
     ! echo "${TRAVIS_COMMIT_MESSAGE}" | grep -- --no-deploy
  then
      openssl aes-256-cbc -K $encrypted_11bb5fe03766_key -iv $encrypted_11bb5fe03766_iv -in k8s-ops-jsons-secret.tar.enc -out secret-k8s-ops-jsons.tar -d
      tar xvf secret-k8s-ops-jsons.tar
      if [ "${CLOUDSDK_CORE_PROJECT}" == "uumpa-public" ]; then
        SECRET_FILE="./secret-uumpa-public-k8s-ops.json"
      else
        SECRET_FILE="./secret-k8s-ops.json"
      fi
      IMAGE_TAG="gcr.io/${CLOUDSDK_CORE_PROJECT}/${PROJECT_NAME}:${TRAVIS_TAG:-$TRAVIS_COMMIT}"
      CLOUDBUILD_SUBSTITUTIONS="_IMAGE_TAG=${IMAGE_TAG},_CLOUDSDK_CORE_PROJECT=${CLOUDSDK_CORE_PROJECT},_PROJECT_NAME=${PROJECT_NAME}"
      if docker run -v `readlink -f ${SECRET_FILE}`:/k8s-ops/secret.json \
                    -v `pwd`:/pwd orihoch/sk8s-ops \
                    -c '
          RES=0;
          ERROR="";
          ! gcloud auth activate-service-account --key-file=/k8s-ops/secret.json \
            && echo "failed to activate service account" && exit 1;
          ! gcloud config set project '${CLOUDSDK_CORE_PROJECT}' \
            && echo "failed to set project '${CLOUDSDK_CORE_PROJECT}'" && exit 1;
          ! gcloud container builds submit --substitutions "'${CLOUDBUILD_SUBSTITUTIONS}'" '$BUILD_PATH' --config /pwd/cloudbuild-gcr-docker-cache.yaml \
            && ERROR="failed to build image" && RES=1;
          echo $ERROR;
          exit $RES;
      '; then
        true
      else
        echo "Failed to run docker ops"
        false
      fi
  else
    echo "skipping deployment"
    true
  fi
